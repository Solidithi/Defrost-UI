/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
	Contract,
	ContractFactory,
	ContractTransactionResponse,
	Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
	ProjectHubUpgradeable,
	ProjectHubUpgradeableInterface,
} from "../ProjectHubUpgradeable";

const _abi = [
	{
		type: "function",
		name: "MULTICALL_SENDER_SLOT",
		inputs: [],
		outputs: [
			{
				name: "",
				type: "bytes32",
				internalType: "bytes32",
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "createLaunchpool",
		inputs: [
			{
				name: "_params",
				type: "tuple",
				internalType:
					"struct LaunchpoolLibrary.LaunchpoolCreationParams",
				components: [
					{
						name: "projectId",
						type: "uint64",
						internalType: "uint64",
					},
					{
						name: "projectTokenAmount",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "projectToken",
						type: "address",
						internalType: "address",
					},
					{
						name: "vAsset",
						type: "address",
						internalType: "address",
					},
					{
						name: "startBlock",
						type: "uint128",
						internalType: "uint128",
					},
					{
						name: "endBlock",
						type: "uint128",
						internalType: "uint128",
					},
					{
						name: "maxVTokensPerStaker",
						type: "uint256",
						internalType: "uint256",
					},
					{
						name: "changeBlocks",
						type: "uint128[]",
						internalType: "uint128[]",
					},
					{
						name: "emissionRateChanges",
						type: "uint256[]",
						internalType: "uint256[]",
					},
				],
			},
		],
		outputs: [
			{
				name: "",
				type: "uint64",
				internalType: "uint64",
			},
		],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "createProject",
		inputs: [],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "initialize",
		inputs: [
			{
				name: "_xcmOracleAddress",
				type: "address",
				internalType: "address",
			},
			{
				name: "_initialOwner",
				type: "address",
				internalType: "address",
			},
			{
				name: "_initialVAssets",
				type: "address[]",
				internalType: "address[]",
			},
			{
				name: "_initialNativeAssets",
				type: "address[]",
				internalType: "address[]",
			},
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "nextPoolId",
		inputs: [],
		outputs: [
			{
				name: "",
				type: "uint64",
				internalType: "uint64",
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "nextProjectId",
		inputs: [],
		outputs: [
			{
				name: "",
				type: "uint64",
				internalType: "uint64",
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "owner",
		inputs: [],
		outputs: [
			{
				name: "",
				type: "address",
				internalType: "address",
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "pools",
		inputs: [
			{
				name: "",
				type: "uint64",
				internalType: "uint64",
			},
		],
		outputs: [
			{
				name: "poolId",
				type: "uint64",
				internalType: "uint64",
			},
			{
				name: "poolType",
				type: "uint8",
				internalType: "enum PoolTypeLib.PoolType",
			},
			{
				name: "poolAddress",
				type: "address",
				internalType: "address",
			},
			{
				name: "projectId",
				type: "uint64",
				internalType: "uint64",
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "projects",
		inputs: [
			{
				name: "",
				type: "uint64",
				internalType: "uint64",
			},
		],
		outputs: [
			{
				name: "projectId",
				type: "uint64",
				internalType: "uint64",
			},
			{
				name: "projectOwner",
				type: "address",
				internalType: "address",
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "removeVAssetSupport",
		inputs: [
			{
				name: "_vAsset",
				type: "address",
				internalType: "address",
			},
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "renounceOwnership",
		inputs: [],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "selfMultiCall",
		inputs: [
			{
				name: "callPayloadBatch",
				type: "bytes[]",
				internalType: "bytes[]",
			},
		],
		outputs: [
			{
				name: "allReturnData",
				type: "bytes[]",
				internalType: "bytes[]",
			},
		],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setNativeAssetForVAsset",
		inputs: [
			{
				name: "_vAsset",
				type: "address",
				internalType: "address",
			},
			{
				name: "_nativeAsset",
				type: "address",
				internalType: "address",
			},
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "transferOwnership",
		inputs: [
			{
				name: "newOwner",
				type: "address",
				internalType: "address",
			},
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "vAssetToNativeAsset",
		inputs: [
			{
				name: "",
				type: "address",
				internalType: "address",
			},
		],
		outputs: [
			{
				name: "",
				type: "address",
				internalType: "address",
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "xcmOracleAddress",
		inputs: [],
		outputs: [
			{
				name: "",
				type: "address",
				internalType: "address",
			},
		],
		stateMutability: "view",
	},
	{
		type: "event",
		name: "Initialized",
		inputs: [
			{
				name: "version",
				type: "uint64",
				indexed: false,
				internalType: "uint64",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "OwnershipTransferred",
		inputs: [
			{
				name: "previousOwner",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "newOwner",
				type: "address",
				indexed: true,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "VAssetMappingUpdated",
		inputs: [
			{
				name: "vAsset",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "nativeAsset",
				type: "address",
				indexed: true,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "error",
		name: "AddressZero",
		inputs: [],
	},
	{
		type: "error",
		name: "InvalidInitialization",
		inputs: [],
	},
	{
		type: "error",
		name: "MultiCallFailed",
		inputs: [
			{
				name: "callIndex",
				type: "uint256",
				internalType: "uint256",
			},
			{
				name: "callPayload",
				type: "bytes",
				internalType: "bytes",
			},
			{
				name: "errorPayload",
				type: "bytes",
				internalType: "bytes",
			},
		],
	},
	{
		type: "error",
		name: "NotAcceptedVAsset",
		inputs: [],
	},
	{
		type: "error",
		name: "NotInitializing",
		inputs: [],
	},
	{
		type: "error",
		name: "OwnableInvalidOwner",
		inputs: [
			{
				name: "owner",
				type: "address",
				internalType: "address",
			},
		],
	},
	{
		type: "error",
		name: "OwnableUnauthorizedAccount",
		inputs: [
			{
				name: "account",
				type: "address",
				internalType: "address",
			},
		],
	},
	{
		type: "error",
		name: "TokensArraysLengthMismatch",
		inputs: [],
	},
] as const;

const _bytecode =
	"0x6080604052348015600e575f80fd5b506121b28061001c5f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063715018a611610095578063c7b96dba11610064578063c7b96dba1461029c578063e935b7b1146102a6578063f2fde38b146102c4578063fade8dba146102e0576100fe565b8063715018a61461022357806389a5f0841461022d5780638da5cb5b14610260578063aefb170a1461027e576100fe565b806352ebac8f116100d157806352ebac8f146101895780636254eceb146101b95780636d752616146101d75780637007ff24146101f3576100fe565b806318e56131146101025780632ee63c261461012057806343a342a91461013c5780634aa3a56d14610158575b5f80fd5b61010a610310565b60405161011791906113f8565b60405180910390f35b61013a60048036038101906101359190611473565b61032a565b005b610156600480360381019061015191906114b1565b6104d9565b005b610172600480360381019061016d9190611506565b610604565b604051610180929190611540565b60405180910390f35b6101a3600480360381019061019e91906114b1565b610655565b6040516101b09190611567565b60405180910390f35b6101c1610685565b6040516101ce9190611598565b60405180910390f35b6101f160048036038101906101ec9190611612565b6106a9565b005b61020d600480360381019061020891906116d8565b6109e5565b60405161021a91906113f8565b60405180910390f35b61022b610c34565b005b61024760048036038101906102429190611506565b610c47565b6040516102579493929190611792565b60405180910390f35b610268610cc4565b6040516102759190611567565b60405180910390f35b610286610cf9565b6040516102939190611567565b60405180910390f35b6102a4610d1e565b005b6102ae610de2565b6040516102bb91906113f8565b60405180910390f35b6102de60048036038101906102d991906114b1565b610dfb565b005b6102fa60048036038101906102f5919061182a565b610e7f565b60405161030791906119a0565b60405180910390f35b600360089054906101000a900467ffffffffffffffff1681565b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610390576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103f6576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103fe611089565b8260025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f53b4841fe6b1c42ef57b78111df1f77f065ec7a60dd0bfb84c43159919ba0c3e60405160405180910390a350505050565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361053f576040517f9fabe1c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610547611089565b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f53b4841fe6b1c42ef57b78111df1f77f065ec7a60dd0bfb84c43159919ba0c3e60405160405180910390a35050565b5f602052805f5260405f205f91509050805f015f9054906101000a900467ffffffffffffffff1690805f0160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6002602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f6d48e2e19ddc29298fe904f8ddae212da0a0f29f496020e87edda79b010bcfec81565b5f6106b2611110565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156106fa5750825b90505f60018367ffffffffffffffff1614801561072d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561073b575080155b15610772576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156107bf576001855f0160086101000a81548160ff0219169083151502179055505b6107c88a611137565b8a60045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f89899050905087879050811461084b576040517fd0ca837f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b8181101561092957888882818110610868576108676119c0565b5b905060200201602081019061087d91906114b1565b60025f8d8d85818110610893576108926119c0565b5b90506020020160208101906108a891906114b1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600101905061084d565b50600160035f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600360086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505083156109d8575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516109cf9190611a2f565b60405180910390a15b5050505050505050505050565b5f8060025f8460600160208101906109fd91906114b1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610abd576040517fff9f0e5400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610ac661114b565b905073__$b2f3c1f6b8919fd7ebe9cd758bfba438f1$__639f9cabb65f865f016020810190610af59190611506565b846040518463ffffffff1660e01b8152600401610b1493929190611a6d565b5f6040518083038186803b158015610b2a575f80fd5b505af4158015610b3c573d5f803e3d5ffd5b505050505f8073__$c21ad995a892872ea7830f503e2b84667f$__63bd1342906001600360089054906101000a900467ffffffffffffffff168760045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b896040518763ffffffff1660e01b8152600401610bbb96959493929190611ea9565b606060405180830381865af4158015610bd6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bfa9190611f37565b509150915080600360086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555081945050505050919050565b610c3c611089565b610c455f61119d565b565b6001602052805f5260405f205f91509050805f015f9054906101000a900467ffffffffffffffff1690805f0160089054906101000a900460ff1690805f0160099054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900467ffffffffffffffff16905084565b5f80610cce61126e565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73__$b2f3c1f6b8919fd7ebe9cd758bfba438f1$__637338f60e5f60035f9054906101000a900467ffffffffffffffff16610d5861114b565b6040518463ffffffff1660e01b8152600401610d7693929190611a6d565b6040805180830381865af4158015610d90573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db49190611f87565b9150508060035f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b60035f9054906101000a900467ffffffffffffffff1681565b610e03611089565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e73575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e6a9190611567565b60405180910390fd5b610e7c8161119d565b50565b60605f8383905090505f8103610ee5575f67ffffffffffffffff811115610ea957610ea8611fc5565b5b604051908082528060200260200182016040528015610edc57816020015b6060815260200190600190039081610ec75790505b50915050611083565b8067ffffffffffffffff811115610eff57610efe611fc5565b5b604051908082528060200260200182016040528015610f3257816020015b6060815260200190600190039081610f1d5790505b509150610f3e33611295565b5f5b81811015611077575f803073ffffffffffffffffffffffffffffffffffffffff16878785818110610f7457610f736119c0565b5b9050602002810190610f869190611ffe565b604051610f9492919061209c565b5f604051808303815f865af19150503d805f8114610fcd576040519150601f19603f3d011682016040523d82523d5f602084013e610fd2565b606091505b50915091508161104b57610fe55f611295565b82878785818110610ff957610ff86119c0565b5b905060200281019061100b9190611ffe565b836040517f3e3864ae0000000000000000000000000000000000000000000000000000000081526004016110429493929190612137565b60405180910390fd5b8085848151811061105f5761105e6119c0565b5b60200260200101819052508260010192505050610f40565b506110815f611295565b505b92915050565b61109161114b565b73ffffffffffffffffffffffffffffffffffffffff166110af610cc4565b73ffffffffffffffffffffffffffffffffffffffff161461110e576110d261114b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111059190611567565b60405180910390fd5b565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61113f6112c0565b61114881611300565b50565b5f611154611384565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611196576111916113b1565b611198565b805b905090565b5f6111a661126e565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7f6d48e2e19ddc29298fe904f8ddae212da0a0f29f496020e87edda79b010bcfec90508181555050565b6112c86113b8565b6112fe576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6113086112c0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611378575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161136f9190611567565b60405180910390fd5b6113818161119d565b50565b5f807f6d48e2e19ddc29298fe904f8ddae212da0a0f29f496020e87edda79b010bcfec9050805491505090565b5f33905090565b5f6113c1611110565b5f0160089054906101000a900460ff16905090565b5f67ffffffffffffffff82169050919050565b6113f2816113d6565b82525050565b5f60208201905061140b5f8301846113e9565b92915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61144282611419565b9050919050565b61145281611438565b811461145c575f80fd5b50565b5f8135905061146d81611449565b92915050565b5f806040838503121561148957611488611411565b5b5f6114968582860161145f565b92505060206114a78582860161145f565b9150509250929050565b5f602082840312156114c6576114c5611411565b5b5f6114d38482850161145f565b91505092915050565b6114e5816113d6565b81146114ef575f80fd5b50565b5f81359050611500816114dc565b92915050565b5f6020828403121561151b5761151a611411565b5b5f611528848285016114f2565b91505092915050565b61153a81611438565b82525050565b5f6040820190506115535f8301856113e9565b6115606020830184611531565b9392505050565b5f60208201905061157a5f830184611531565b92915050565b5f819050919050565b61159281611580565b82525050565b5f6020820190506115ab5f830184611589565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126115d2576115d16115b1565b5b8235905067ffffffffffffffff8111156115ef576115ee6115b5565b5b60208301915083602082028301111561160b5761160a6115b9565b5b9250929050565b5f805f805f806080878903121561162c5761162b611411565b5b5f61163989828a0161145f565b965050602061164a89828a0161145f565b955050604087013567ffffffffffffffff81111561166b5761166a611415565b5b61167789828a016115bd565b9450945050606087013567ffffffffffffffff81111561169a57611699611415565b5b6116a689828a016115bd565b92509250509295509295509295565b5f80fd5b5f61012082840312156116cf576116ce6116b5565b5b81905092915050565b5f602082840312156116ed576116ec611411565b5b5f82013567ffffffffffffffff81111561170a57611709611415565b5b611716848285016116b9565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061175d5761175c61171f565b5b50565b5f81905061176d8261174c565b919050565b5f61177c82611760565b9050919050565b61178c81611772565b82525050565b5f6080820190506117a55f8301876113e9565b6117b26020830186611783565b6117bf6040830185611531565b6117cc60608301846113e9565b95945050505050565b5f8083601f8401126117ea576117e96115b1565b5b8235905067ffffffffffffffff811115611807576118066115b5565b5b602083019150836020820283011115611823576118226115b9565b5b9250929050565b5f80602083850312156118405761183f611411565b5b5f83013567ffffffffffffffff81111561185d5761185c611415565b5b611869858286016117d5565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118e08261189e565b6118ea81856118a8565b93506118fa8185602086016118b8565b611903816118c6565b840191505092915050565b5f61191983836118d6565b905092915050565b5f602082019050919050565b5f61193782611875565b611941818561187f565b9350836020820285016119538561188f565b805f5b8581101561198e578484038952815161196f858261190e565b945061197a83611921565b925060208a01995050600181019050611956565b50829750879550505050505092915050565b5f6020820190508181035f8301526119b8818461192d565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b5f819050919050565b5f611a19611a14611a0f846119ed565b6119f6565b6113d6565b9050919050565b611a29816119ff565b82525050565b5f602082019050611a425f830184611a20565b92915050565b8082525050565b611a58816113d6565b82525050565b611a6781611438565b82525050565b5f606082019050611a805f830186611a48565b611a8d6020830185611a4f565b611a9a6040830184611a5e565b949350505050565b8082525050565b5f611ab760208401846114f2565b905092915050565b611ac8816113d6565b82525050565b5f819050919050565b611ae081611ace565b8114611aea575f80fd5b50565b5f81359050611afb81611ad7565b92915050565b5f611b0f6020840184611aed565b905092915050565b611b2081611ace565b82525050565b5f611b34602084018461145f565b905092915050565b611b4581611438565b82525050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b611b6f81611b4b565b8114611b79575f80fd5b50565b5f81359050611b8a81611b66565b92915050565b5f611b9e6020840184611b7c565b905092915050565b611baf81611b4b565b82525050565b5f80fd5b5f80fd5b5f80fd5b5f8083356001602003843603038112611bdd57611bdc611bbd565b5b83810192508235915060208301925067ffffffffffffffff821115611c0557611c04611bb5565b5b602082023603831315611c1b57611c1a611bb9565b5b509250929050565b5f82825260208201905092915050565b5f819050919050565b5f611c478383611ba6565b60208301905092915050565b5f602082019050919050565b5f611c6a8385611c23565b9350611c7582611c33565b805f5b85811015611cad57611c8a8284611b90565b611c948882611c3c565b9750611c9f83611c53565b925050600181019050611c78565b5085925050509392505050565b5f8083356001602003843603038112611cd657611cd5611bbd565b5b83810192508235915060208301925067ffffffffffffffff821115611cfe57611cfd611bb5565b5b602082023603831315611d1457611d13611bb9565b5b509250929050565b5f82825260208201905092915050565b5f80fd5b82818337505050565b5f611d448385611d1c565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611d7757611d76611d2c565b5b602083029250611d88838584611d30565b82840190509392505050565b5f6101208301611da65f840184611aa9565b611db25f860182611abf565b50611dc06020840184611b01565b611dcd6020860182611b17565b50611ddb6040840184611b26565b611de86040860182611b3c565b50611df66060840184611b26565b611e036060860182611b3c565b50611e116080840184611b90565b611e1e6080860182611ba6565b50611e2c60a0840184611b90565b611e3960a0860182611ba6565b50611e4760c0840184611b01565b611e5460c0860182611b17565b50611e6260e0840184611bc1565b85830360e0870152611e75838284611c5f565b92505050611e87610100840184611cba565b858303610100870152611e9b838284611d39565b925050508091505092915050565b5f60c082019050611ebc5f830189611aa2565b611ec96020830188611a4f565b611ed66040830187611a5e565b611ee36060830186611a5e565b8181036080830152611ef58185611d94565b9050611f0460a0830184611a5e565b979650505050505050565b5f81519050611f1d816114dc565b92915050565b5f81519050611f3181611449565b92915050565b5f805f60608486031215611f4e57611f4d611411565b5b5f611f5b86828701611f0f565b9350506020611f6c86828701611f0f565b9250506040611f7d86828701611f23565b9150509250925092565b5f8060408385031215611f9d57611f9c611411565b5b5f611faa85828601611f0f565b9250506020611fbb85828601611f0f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f80fd5b5f80fd5b5f80fd5b5f808335600160200384360303811261201a57612019611ff2565b5b80840192508235915067ffffffffffffffff82111561203c5761203b611ff6565b5b60208301925060018202360383131561205857612057611ffa565b5b509250929050565b5f81905092915050565b828183375f83830152505050565b5f6120838385612060565b935061209083858461206a565b82840190509392505050565b5f6120a8828486612078565b91508190509392505050565b6120bd81611ace565b82525050565b5f82825260208201905092915050565b5f6120de83856120c3565b93506120eb83858461206a565b6120f4836118c6565b840190509392505050565b5f6121098261189e565b61211381856120c3565b93506121238185602086016118b8565b61212c816118c6565b840191505092915050565b5f60608201905061214a5f8301876120b4565b818103602083015261215d8185876120d3565b9050818103604083015261217181846120ff565b90509594505050505056fea2646970667358221220787d4b01f3bdc13a0a78b9377294ad7c4d2ca6305b86b609fc2b514f38b5de0064736f6c634300081a0033";

type ProjectHubUpgradeableConstructorParams =
	| [
			linkLibraryAddresses: ProjectHubUpgradeableLibraryAddresses,
			signer?: Signer,
	  ]
	| ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
	xs: ProjectHubUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
	return (
		typeof xs[0] === "string" ||
		(Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
		"_isInterface" in xs[0]
	);
};

export class ProjectHubUpgradeable__factory extends ContractFactory {
	constructor(...args: ProjectHubUpgradeableConstructorParams) {
		if (isSuperArgs(args)) {
			super(...args);
		} else {
			const [linkLibraryAddresses, signer] = args;
			super(
				_abi,
				ProjectHubUpgradeable__factory.linkBytecode(
					linkLibraryAddresses
				),
				signer
			);
		}
	}

	static linkBytecode(
		linkLibraryAddresses: ProjectHubUpgradeableLibraryAddresses
	): string {
		let linkedBytecode = _bytecode;

		linkedBytecode = linkedBytecode.replace(
			new RegExp("__\\$b2f3c1f6b8919fd7ebe9cd758bfba438f1\\$__", "g"),
			linkLibraryAddresses[
				"src/upgradeable/v1/ProjectHubUpgradeable.sol:ProjectLibrary"
			]
				.replace(/^0x/, "")
				.toLowerCase()
		);

		linkedBytecode = linkedBytecode.replace(
			new RegExp("__\\$c21ad995a892872ea7830f503e2b84667f\\$__", "g"),
			linkLibraryAddresses[
				"src/upgradeable/v1/ProjectHubUpgradeable.sol:LaunchpoolLibrary"
			]
				.replace(/^0x/, "")
				.toLowerCase()
		);

		return linkedBytecode;
	}

	override getDeployTransaction(
		overrides?: NonPayableOverrides & { from?: string }
	): Promise<ContractDeployTransaction> {
		return super.getDeployTransaction(overrides || {});
	}
	override deploy(overrides?: NonPayableOverrides & { from?: string }) {
		return super.deploy(overrides || {}) as Promise<
			ProjectHubUpgradeable & {
				deploymentTransaction(): ContractTransactionResponse;
			}
		>;
	}
	override connect(
		runner: ContractRunner | null
	): ProjectHubUpgradeable__factory {
		return super.connect(runner) as ProjectHubUpgradeable__factory;
	}

	static readonly bytecode = _bytecode;
	static readonly abi = _abi;
	static createInterface(): ProjectHubUpgradeableInterface {
		return new Interface(_abi) as ProjectHubUpgradeableInterface;
	}
	static connect(
		address: string,
		runner?: ContractRunner | null
	): ProjectHubUpgradeable {
		return new Contract(
			address,
			_abi,
			runner
		) as unknown as ProjectHubUpgradeable;
	}
}

export interface ProjectHubUpgradeableLibraryAddresses {
	["src/upgradeable/v1/ProjectHubUpgradeable.sol:ProjectLibrary"]: string;
	["src/upgradeable/v1/ProjectHubUpgradeable.sol:LaunchpoolLibrary"]: string;
}
